{"version":3,"sources":["components/Expenses/ExpenseForm.js","components/Expenses/NewExpense.js","components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","type","value","onChange","target","min","step","max","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","id","Math","random","toString","onAddExpense","ExpenseDate","month","toLocaleString","day","year","getFullYear","Card","classes","children","ExpenseItem","ExpensesList","items","length","map","expense","ExpensesFilter","selected","onChangeFilterYear","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","datapoint","totalMaximum","dataPoint","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","selectedFilterYear","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a36aff6c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './ExpenseForm.css';\n\nconst ExpenseForm = (props) => {\n    const [enteredTitle, setEnteredTitle] = useState('');\n    const [enteredAmount, setEnteredAmount] = useState('');\n    const [enteredDate, setEnteredDate] = useState('');\n\n    // this is the same as the above, you are managing state through an object\n    // const [userInput, setUserInput] = useState({\n    //     enteredTitle: '',\n    //     enteredAmount: '',\n    //     enteredDate: ''\n    // });\n\n    const titleChangeHandler = (event) => {\n        setEnteredTitle(event.target.value);\n        // setUserInput({\n        //     ...userInput, \n        //     enteredTitle: event.target.value\n        // })\n\n        // This method insures that you are using the latest state\n        // setUserInput((prevState) => {\n        //     return {...prevState, enteredTitle: event.target.value}\n\n        // })\n    };\n\n    const amountChangeHandler = (event) => {\n        setEnteredAmount(event.target.value);\n\n        // setUserInput({\n        //     ...userInput, \n        //     enteredAmount: event.target.value\n        // })\n    };\n\n    const dateChangeHandler = (event) => {\n        setEnteredDate(event.target.value);\n\n        // setUserInput({\n        //     ...userInput, \n        //     enteredDate: event.target.value\n        // })\n    };\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n        const expenseData = {\n            title: enteredTitle,\n            amount: +enteredAmount,\n            date: new Date(enteredDate)\n        };\n        props.onSaveExpenseData(expenseData);\n\n        // Clears the form values because the value attribute was added to the input tags\n        setEnteredTitle('');\n        setEnteredAmount('');\n        setEnteredDate('');\n    };\n\n    return <div>\n        <form onSubmit={submitHandler} >\n            <div className=\"new-expense__controls\"> \n                <div className=\"new-expense__control\">\n                    <label>Title</label>\n                    <input type='text' value={enteredTitle} onChange={titleChangeHandler}/>\n                </div>\n                <div className=\"new-expense__control\">\n                    <label>Amount</label>\n                    <input type='number' value={enteredAmount} min='0.01' step='0.01' onChange={amountChangeHandler}/>\n                </div>\n                <div className=\"new-expense__control\">\n                    <label>Date</label>\n                    <input type='date' value={enteredDate} min='2019-01-10' max='2022-12-31' onChange={dateChangeHandler}/>\n                </div>\n            </div>\n            <div className=\"new-expense__actions\">\n                <button type=\"button\" onClick={props.onCancel}>Cancel</button>\n                <button type=\"submit\">Add Expense</button>\n            </div>\n        </form>\n    </div>\n}\n\nexport default ExpenseForm;","import React, {useState} from 'react';\nimport './NewExpense.css';\nimport ExpenseForm from './ExpenseForm';\n\nconst NewExpense = (props) => {\n    const [isEditing, setIsEditing] = useState(false);\n    const saveExpenseDataHandler = (enteredExpenseData) => {\n        const expenseData = {\n            ...enteredExpenseData,\n            id: Math.random().toString()\n        }\n            props.onAddExpense(expenseData);\n            setIsEditing(false);\n    }\n\n    const startIsEditingHandler = () => {\n        setIsEditing(true);\n    }\n\n    const stopEditingHandler = () => {\n        setIsEditing(false);\n    }\n\n    return <div className=\"new-expense\">\n        {!isEditing && (<button onClick={startIsEditingHandler}>Add New Expense</button>)}\n        {isEditing && (<ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancel={stopEditingHandler}/>)}\n    </div>\n};\n\nexport default NewExpense;","import './ExpenseDate.css';\n\nconst ExpenseDate = (props) => {\n    const month = props.date.toLocaleString('en-us', {month: 'long'});\n    const day = props.date.toLocaleString('en-us', {day: '2-digit'});\n    const year = props.date.getFullYear();\n\n    return (\n        <div className=\"expense-date\">\n            <div className=\"expense-date__month\">{month}</div>\n            <div className=\"expense-date__year\">{year}</div>\n            <div className=\"expense-date__day\">{day}</div>\n        </div>\n    )\n}\n\nexport default ExpenseDate;","import './Card.css';\n\nconst Card = (props) => {\n    // the classes variable will add any className that is called on the card component to ensure\n    // that all styles are applied to the Card component.\n    const classes = \"card \" + props.className;\n\n    // props.children will show all of the content between the opening and closing tag of Card\n    // see ExpenseItem.js for an example\n    return <div className={classes}>{props.children}</div>;\n}\n\nexport default Card;","import React from 'react';\nimport ExpenseDate from './ExpenseDate';\nimport './ExpenseItem.css';\nimport Card from '../UI/Card';\n\nconst ExpenseItem = (props) => {\n\n    return (\n        <Card className=\"expense-item\">\n            <ExpenseDate date={props.date}/>\n            <div className=\"expense-item__description\">\n                <h2>{props.title}</h2>\n            </div>\n            <div className=\"expense-item__price\">${props.amount}</div>\n        </Card>\n    );\n}\n\nexport default ExpenseItem;","import './ExpensesList.css';\nimport ExpenseItem from './ExpenseItem';\n\nconst ExpensesList = props => {\n    \n    if(props.items.length === 0) {\n        return <h2 className=\"expenses-list__fallback\">No expenses found.</h2>\n    }\n    return (<ul className=\"expenses-list\">\n        {props.items.map(expense => (\n            <ExpenseItem \n                key={expense.id}\n                title={expense.title} \n                amount={expense.amount} \n                date={expense.date}\n            />\n        ))}\n    </ul>)\n}\n\nexport default ExpensesList","import React from 'react';\n\nimport './ExpensesFilter.css';\n\nconst ExpensesFilter = (props) => {\n\n    const dropdownChangeHandler = (event) => {\n        props.onChangeFilterYear(event.target.value);\n    };\n\n    \n\n  return (\n    <div className='expenses-filter'>\n      <div className='expenses-filter__control'>\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={dropdownChangeHandler}>\n          <option value='2022'>2022</option>\n          <option value='2021'>2021</option>\n          <option value='2020'>2020</option>\n          <option value='2019'>2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;","import React from 'react';\nimport './ChartBar.css';\n\nconst ChartBar = (props) => {\n    let barFillHeight = '0%';\n\n    if(props.maxValue > 0){\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\n    }\n\n    return <div className=\"chart-bar\">\n        <div className=\"chart-bar__inner\">\n            <div className=\"chart-bar__fill\" style={{height: barFillHeight}}></div>\n        </div>\n        <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n}\n\nexport default ChartBar;","import React from 'react';\nimport ChartBar from './ChartBar';\nimport './Chart.css';\n\nconst Chart = (props) => {\n    const dataPointValues = props.dataPoints.map(datapoint => datapoint.value)\n    const totalMaximum = Math.max(...dataPointValues);\n\n    return <div className=\"chart\">\n        {\n            props.dataPoints.map(dataPoint => (\n                <ChartBar \n                    key={dataPoint.label}\n                    value={dataPoint.value} \n                    maxValue={totalMaximum} \n                    label={dataPoint.label}\n                />\n            )\n        )}\n    </div>\n}\n\nexport default Chart;","import React from 'react';\n\nimport Chart from '../Chart/Chart';\n\nconst ExpensesChart = (props) => {\n    const chartDataPoints = [\n        {label: 'Jan', value:0},\n        {label: 'Feb', value:0},\n        {label: 'Mar', value:0},\n        {label: 'Apr', value:0},\n        {label: 'May', value:0},\n        {label: 'Jun', value:0},\n        {label: 'Jul', value:0},\n        {label: 'Aug', value:0},\n        {label: 'Sep', value:0},\n        {label: 'Oct', value:0},\n        {label: 'Nov', value:0},\n        {label: 'Dec', value:0}\n    ]\n\n    for (const expense of props.expenses) {\n        const expenseMonth = expense.date.getMonth(); //starting at 0 => January => 0\n        chartDataPoints[expenseMonth].value += expense.amount;\n    }\n\n    return <Chart dataPoints={chartDataPoints}/>\n}\n\nexport default ExpensesChart;","import React, {useState} from 'react';\nimport ExpensesList from \"./ExpensesList\";\nimport './Expenses.css';\nimport './ExpensesFilter';\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport ExpensesChart from './ExpensesChart';\n\nconst Expenses = (props) => {\n    const [filteredYear, setFilteredYear] = useState('2021');\n    const filterChangeHandler = (selectedFilterYear) => {\n        setFilteredYear(selectedFilterYear);\n    };\n\n    const filteredExpenses = props.items.filter(expense => (\n        expense.date.getFullYear().toString() === filteredYear\n    ));\n\n    return (\n        <li>\n            <Card className=\"expenses\">\n                <ExpensesFilter selected={filteredYear} onChangeFilterYear={filterChangeHandler}/>\n                <ExpensesChart expenses={filteredExpenses}/>\n                <ExpensesList items={filteredExpenses}/>\n            </Card>\n        </li>\n    );\n}\n\nexport default Expenses;","import React, {useState} from 'react';\nimport NewExpense from './components/Expenses/NewExpense';\nimport Expenses from './components/Expenses/Expenses';\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES)\n\n  const addExpenseHandler = expense => {\n    // Updating state when it is based on a previous state. \n    // Call a function to ensure you are using the latest state.\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses]\n    })\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}